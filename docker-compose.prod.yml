services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: fastapi
    environment:
      - VIRTUAL_HOST=nahuelapi.duckdns.org
      - LETSENCRYPT_HOST=nahuelapi.duckdns.org
      - LETSENCRYPT_EMAIL=navalesnahuel@gmail.com
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      - db
    entrypoint: ["entrypoints/gunicorn.sh"]
    networks:
      - default

  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs 
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - vhost.d:/etc/nginx/vhost.d  
      - html:/usr/share/nginx/html  
    networks:
      - default

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    depends_on:
      - nginx-proxy
    volumes:
      - ./certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    environment:
      - DEFAULT_EMAIL=navalesnahuel@gmail.com
      - NGINX_PROXY_CONTAINER=nginx-proxy  
    networks:
      - default

  db:
    container_name: db
    hostname: db
    image: library/postgres:16.3
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
      - POSTGRES_DB=app
    volumes:
      - app_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    depends_on:
      - db 
    ports:
      - "7777:7777"

volumes:
  vhost.d:
  html:
  app_db_data:
    driver: "local"

networks:
  default:
    driver: bridge
